{
    "project": {
        "metadata": {
            "name": "FEMSQ",
            "version": "1.0.0",
            "description": "Cистема работы с контрагентами и объектами при капитальном строительстве на основе БД MS SQL Server FEMSQ (Fish Eye MS SQL Server)",
            "author": "Александр",
            "created": "2025-10-08",
            "lastUpdated": "2025-10-08",
            "status": "planning",
            "repository": "https://github.com/bondalen/femsq.git",
            "license": "MIT",
            "keywords": [
                "crm",
                "contractors",
                "management"
            ],
            "documentationRules": "docs/project-documentation-rules.md"
        },
        "architecture": {
            "type": "full-stack",
            "pattern": "modular-monolith",
            "pattern_decision": "docs/decisions/007-modular-monolith-pattern.md",
            "backend": {
                "framework": "Spring Boot 3.4.5",
                "language": "Java 21 LTS",
                "database": "PostgreSQL 16",
                "api": "GraphQL",
                "security": "на данном этапе не разрабатывается",
                "migrations": "Liquibase",
                "reactive": "R2DBC",
                "monitoring": "Spring Boot Actuator"
            },
            "frontend": {
                "framework": "Vue.js 3.4.21",
                "language": "TypeScript 5.4.0",
                "ui": "Quasar Framework 2.16.1",
                "graphql": "Apollo Client",
                "build": "Vite",
                "maps": "Leaflet",
                "routing": "Vue Router",
                "state": "Pinia"
            },
            "infrastructure": {
                "database": "MS SQL Server",
                "monitoring": "Spring Boot Actuator",
                "ai": "MCP Servers",
                "deployment": "jar-файл"
            }
        },
        "features": {
            "core": [
                "Управление отношениями с контрагентами",
                "CRM функциональность",
                "Документооборот",
                "Управленческий финансовый учет"
            ],
            "advanced": [
                "Автоматическая генерация документов (PDF, Excel, CSV)",
                "Система отчетности",
                "Кэширование и оптимизация"
            ]
        },
        "modules": [
            {
                "module": {
                    "displayName": "exampleModuleA. № 01",
                    "attributes": {
                        "id": "exampleModuleA",
                        "number": "01",
                        "name": "Модуль, пример А",
                        "description": "Создание чего-то А",
                        "purpose": "Что то создано",
                        "status": "planned",
                        "location": "src/",
                        "entryPoint": "src/exampleModuleA/...",
                        "dependencies": []
                    },
                    "components": [
                        {
                            "component": {
                                "displayName": "exampleComponentA. № 01.01",
                                "attributes": {
                                    "id": "exampleComponentA",
                                    "number": "01.01",
                                    "name": "Компонент, пример А",
                                    "description": "Пример описания А",
                                    "type": "classes",
                                    "location": "src/...",
                                    "responsibilities": [
                                        "Пример ответственности А",
                                        "Пример ответственности А1",
                                        "Пример ответственности А2"
                                    ],
                                    "status": "planned"
                                },
                                "classes": [
                                    {
                                        "class": {
                                            "displayName": "ExampleClassA. № 01.01.01",
                                            "attributes": {
                                                "id": "ExampleClassA",
                                                "number": "01.01.01",
                                                "name": "Класс, пример А",
                                                "location": "src/...",
                                                "responsibilities": [
                                                    "Пример ответственности А"
                                                ],
                                                "dependsOn": [
                                                    "ConnectionManager"
                                                ],
                                                "status": "planned"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        ],
        "database": {
            "schema": "fepro",
            "version": "1.0.0",
            "engine": "PostgreSQL 16",
            "extensions": [
                "PostGIS",
                "uuid-ossp",
                "pg_trgm"
            ],
            "tables": [
                {
                    "name": "contractors",
                    "description": "Таблица контрагентов",
                    "columns": [
                        {
                            "name": "id",
                            "type": "UUID",
                            "constraints": "PRIMARY KEY DEFAULT gen_random_uuid()"
                        },
                        {
                            "name": "name",
                            "type": "VARCHAR(255)",
                            "constraints": "NOT NULL"
                        },
                        {
                            "name": "legal_name",
                            "type": "VARCHAR(255)",
                            "constraints": "NULL"
                        },
                        {
                            "name": "inn",
                            "type": "VARCHAR(12)",
                            "constraints": "UNIQUE NULL"
                        },
                        {
                            "name": "kpp",
                            "type": "VARCHAR(9)",
                            "constraints": "NULL"
                        },
                        {
                            "name": "email",
                            "type": "VARCHAR(255)",
                            "constraints": "NULL"
                        },
                        {
                            "name": "phone",
                            "type": "VARCHAR(50)",
                            "constraints": "NULL"
                        },
                        {
                            "name": "address",
                            "type": "TEXT",
                            "constraints": "NULL"
                        },
                        {
                            "name": "coordinates",
                            "type": "GEOMETRY(POINT, 4326)",
                            "constraints": "NULL"
                        },
                        {
                            "name": "status",
                            "type": "VARCHAR(50)",
                            "constraints": "NOT NULL DEFAULT 'active'"
                        },
                        {
                            "name": "created_at",
                            "type": "TIMESTAMP",
                            "constraints": "NOT NULL DEFAULT NOW()"
                        },
                        {
                            "name": "updated_at",
                            "type": "TIMESTAMP",
                            "constraints": "NOT NULL DEFAULT NOW()"
                        }
                    ],
                    "indexes": [
                        {
                            "name": "idx_contractors_inn",
                            "columns": [
                                "inn"
                            ],
                            "type": "UNIQUE"
                        },
                        {
                            "name": "idx_contractors_coordinates",
                            "columns": [
                                "coordinates"
                            ],
                            "type": "GIST"
                        },
                        {
                            "name": "idx_contractors_status",
                            "columns": [
                                "status"
                            ],
                            "type": "BTREE"
                        },
                        {
                            "name": "idx_contractors_name",
                            "columns": [
                                "name"
                            ],
                            "type": "BTREE"
                        }
                    ]
                },
                {
                    "name": "users",
                    "description": "Таблица пользователей системы",
                    "columns": [
                        {
                            "name": "id",
                            "type": "UUID",
                            "constraints": "PRIMARY KEY DEFAULT gen_random_uuid()"
                        },
                        {
                            "name": "username",
                            "type": "VARCHAR(100)",
                            "constraints": "UNIQUE NOT NULL"
                        },
                        {
                            "name": "email",
                            "type": "VARCHAR(255)",
                            "constraints": "UNIQUE NOT NULL"
                        },
                        {
                            "name": "password_hash",
                            "type": "VARCHAR(255)",
                            "constraints": "NOT NULL"
                        },
                        {
                            "name": "first_name",
                            "type": "VARCHAR(100)",
                            "constraints": "NULL"
                        },
                        {
                            "name": "last_name",
                            "type": "VARCHAR(100)",
                            "constraints": "NULL"
                        },
                        {
                            "name": "role",
                            "type": "VARCHAR(50)",
                            "constraints": "NOT NULL DEFAULT 'USER'"
                        },
                        {
                            "name": "is_active",
                            "type": "BOOLEAN",
                            "constraints": "NOT NULL DEFAULT true"
                        },
                        {
                            "name": "created_at",
                            "type": "TIMESTAMP",
                            "constraints": "NOT NULL DEFAULT NOW()"
                        },
                        {
                            "name": "updated_at",
                            "type": "TIMESTAMP",
                            "constraints": "NOT NULL DEFAULT NOW()"
                        }
                    ],
                    "indexes": [
                        {
                            "name": "idx_users_username",
                            "columns": [
                                "username"
                            ],
                            "type": "UNIQUE"
                        },
                        {
                            "name": "idx_users_email",
                            "columns": [
                                "email"
                            ],
                            "type": "UNIQUE"
                        },
                        {
                            "name": "idx_users_role",
                            "columns": [
                                "role"
                            ],
                            "type": "BTREE"
                        }
                    ]
                }
            ],
            "migrations": [
                {
                    "version": "001",
                    "description": "Initial schema creation",
                    "file": "001-initial-schema.xml",
                    "status": "planned",
                    "changes": [
                        "Create contractors table",
                        "Create users table",
                        "Create basic indexes"
                    ]
                },
                {
                    "version": "002",
                    "description": "Add PostGIS support",
                    "file": "002-add-postgis.xml",
                    "status": "planned",
                    "changes": [
                        "Enable PostGIS extension",
                        "Add spatial indexes",
                        "Create regions table"
                    ]
                }
            ]
        },
        "development": {
            "setup": {
                "prerequisites": [
                    "Java 21 LTS",
                    "Node.js 20+",
                    "PostgreSQL 16",
                    "Docker",
                    "Maven 3.9+",
                    "Git"
                ],
                "scripts": {
                    "dev": {
                        "command": "mvn spring-boot:run",
                        "description": "Запуск Spring Boot приложения в режиме разработки",
                        "location": "backend/",
                        "usage": "Локальная разработка backend"
                    },
                    "frontend": {
                        "command": "npm run dev",
                        "description": "Запуск Vue.js приложения в режиме разработки",
                        "location": "frontend/",
                        "usage": "Локальная разработка frontend"
                    },
                    "build": {
                        "command": "mvn clean package",
                        "description": "Сборка Spring Boot приложения в JAR файл",
                        "location": "backend/",
                        "usage": "Сборка для production"
                    },
                    "test": {
                        "command": "mvn test",
                        "description": "Запуск unit тестов",
                        "location": "backend/",
                        "usage": "Тестирование backend кода"
                    },
                    "migrate": {
                        "command": "mvn liquibase:update",
                        "description": "Выполнение миграций базы данных",
                        "location": "backend/",
                        "usage": "Обновление схемы БД"
                    },
                    "deploy": {
                        "command": "./scripts/deploy.sh",
                        "description": "Полное развертывание приложения с проверками",
                        "location": "scripts/",
                        "usage": "Production развертывание"
                    },
                    "update": {
                        "command": "./scripts/update.sh",
                        "description": "Обновление приложения с сохранением данных",
                        "location": "scripts/",
                        "usage": "Обновление production версии"
                    },
                    "backup": {
                        "command": "./scripts/backup.sh",
                        "description": "Создание резервной копии базы данных",
                        "location": "scripts/",
                        "usage": "Резервное копирование данных"
                    },
                    "blue-green": {
                        "command": "./scripts/blue-green-deploy.sh",
                        "description": "Blue-Green развертывание без простоя",
                        "location": "scripts/",
                        "usage": "Безопасное обновление production"
                    }
                }
            },
            "standards": {
                "codeStyle": "Google Java Style + ESLint/Prettier",
                "gitFlow": "GitHub Flow",
                "testing": "JUnit 5 + Vue Test Utils",
                "documentation": "JSON + Markdown + ADR",
                "api": "GraphQL-first"
            }
        },
        "deployment": {
            "strategy": "один jar-файл с подключением к внешней базе MS SQL Server",
            "architecture": {
                "type": "monolithic"
            },
            "environments": {
                "database": "localhost:1433/FishEye",
                "frontend": "http://localhost:3000",
                "backend": "http://localhost:8080"
            },
            "monitoring": {
                "health_checks": true,
                "prometheus_metrics": true,
                "logging": "file-rotation",
                "backup": "daily-database"
            },
            "update_strategy": {
                "type": "rolling-update",
                "backup_before_update": true,
                "health_check_after_update": true,
                "rollback_on_failure": true
            }
        },
        "timeline": {
            "phases": [
                {
                    "name": "Phase 1: Foundation",
                    "duration": "2 weeks",
                    "startDate": "2025-01-02",
                    "tasks": [
                        "Настройка инфраструктуры",
                        "Базовая архитектура Backend",
                        "Базовая архитектура Frontend",
                        "Настройка БД и миграций",
                        "Создание JSON-документации"
                    ],
                    "status": "in_progress",
                    "progress": 40
                },
                {
                    "name": "Phase 2: Core Features",
                    "duration": "4 weeks",
                    "startDate": "2025-01-16",
                    "tasks": [
                        "Модуль управления отношениями с контрагентами",
                        "Система аутентификации",
                        "Базовый UI/UX",
                        "API интеграция Frontend-Backend"
                    ],
                    "status": "planned",
                    "progress": 0
                },
                {
                    "name": "Phase 3: Advanced Features",
                    "duration": "3 weeks",
                    "startDate": "2025-02-13",
                    "tasks": [
                        "ГИС-аналитика",
                        "Документооборот",
                        "Система уведомлений",
                        "Интеграции с внешними API"
                    ],
                    "status": "planned",
                    "progress": 0
                }
            ]
        },
        "risks": [
            {
                "id": "R001",
                "description": "Сложность интеграции с внешними API",
                "probability": "medium",
                "impact": "high",
                "mitigation": "Поэтапная интеграция с тестированием",
                "status": "monitoring"
            },
            {
                "id": "R002",
                "description": "Производительность при работе с большими объемами данных",
                "probability": "low",
                "impact": "medium",
                "mitigation": "Оптимизация запросов и кэширование",
                "status": "monitoring"
            }
        ],
        "resources": {
            "team": [
                {
                    "role": "Full-stack Developer",
                    "name": "Александр",
                    "responsibilities": [
                        "Backend",
                        "Frontend",
                        "DevOps",
                        "Database",
                        "Architecture"
                    ],
                    "skills": [
                        "Java",
                        "Vue.js",
                        "PostgreSQL",
                        "Docker",
                        "GraphQL"
                    ]
                }
            ],
            "budget": {
                "development": "0 (open-source)",
                "hosting": "estimated $50/month",
                "tools": "0 (free tools)",
                "total": "estimated $50/month"
            },
            "tools": [
                "Cursor",
                "GitHub"
            ],
            "documentation": {
                "main": "docs"
            }
        }
    }
}